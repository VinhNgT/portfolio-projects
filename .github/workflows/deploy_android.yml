name: Deploy android app
run-name: Deploy android app ${{ inputs.package-name }}-v${{ inputs.version }}

on:
  workflow_call:
    inputs:
      # config-yaml:
      #   type: string
      #   required: true

      package-name:
        type: string
        required: true

      version:
        type: string
        required: true

      package-location:
        type: string
        required: true

jobs:
  build-android:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Read package secrets config
        id: get_secrets_config
        uses: ./.github/workflows/actions/read-package-secrets-config
        with:
          working-directory: melos_workspace/${{ inputs.package-location }}

      - name: Decrypt package secrets
        uses: ./.github/workflows/actions/decrypt-package-secrets
        with:
          working-directory: melos_workspace/${{ inputs.package-location }}
          decryption-script: ${{ steps.get_secrets_config.outputs.decryption-script }}
          args: ${{ steps.get_secrets_config.outputs.args }}
          secrets-key: ${{ secrets[steps.get_secrets_config.outputs.secrets-key-name] }}

      - name: Set up Java
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: ${{ vars.JAVA_SDK_VERSION }}
          cache: gradle
          cache-dependency-path: |
            melos_workspace/${{ inputs.package-location }}/pkg_workspace/android/*.gradle*
            melos_workspace/${{ inputs.package-location }}/pkg_workspace/android/**/gradle-wrapper.properties

      - name: Setup Android SDK
        if: ${{ vars.NEED_INSTALL_ANDROID_SDK == 'true' }}
        uses: android-actions/setup-android@v3
        with:
          log-accepted-android-sdk-licenses: false

      - name: Setup Flutter
        uses: kuhnroyal/flutter-fvm-config-action/setup@v3
        with:
          path: melos_workspace/${{ inputs.package-location }}/.fvmrc

      - name: Create symlink .fvm/flutter_sdk
        working-directory: melos_workspace/${{ inputs.package-location }}
        run: |
          mkdir -p .fvm
          ln -s $FLUTTER_ROOT .fvm/flutter_sdk

      - name: Build android app
        working-directory: melos_workspace/${{ inputs.package-location }}
        run: |
          CD_CONFIG_YAML=$(cat cicd/cd_config.yaml)

          BUILD_SCRIPT=$(echo "$CD_CONFIG_YAML" | yq e '.deployments.android.build_script')
          chmod +x $BUILD_SCRIPT
          $BUILD_SCRIPT

      - name: Upload android build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: android-build-artifacts
          path: melos_workspace/${{ inputs.package-location }}/build_result/release
          if-no-files-found: error
          retention-days: 1
          compression-level: 0

  publish-playstore:
    runs-on: ubuntu-latest
    needs: build-android
    steps:
      - uses: actions/checkout@v4

      - name: Read package secrets config
        id: get_secrets_config
        uses: ./.github/workflows/actions/read-package-secrets-config
        with:
          working-directory: melos_workspace/${{ inputs.package-location }}

      - name: Decrypt package secrets
        uses: ./.github/workflows/actions/decrypt-package-secrets
        with:
          working-directory: melos_workspace/${{ inputs.package-location }}
          decryption-script: ${{ steps.get_secrets_config.outputs.decryption-script }}
          args: ${{ steps.get_secrets_config.outputs.args }}
          secrets-key: ${{ secrets[steps.get_secrets_config.outputs.secrets-key-name] }}

      - name: Get publish config
        id: get_publish_config
        working-directory: melos_workspace/${{ inputs.package-location }}
        run: |
          CD_CONFIG_YAML=$(cat cicd/cd_config.yaml)

          PUBLISH_SCRIPT=$(echo "$CD_CONFIG_YAML" | yq e '.deployments.android.publish.playstore.publish_script')
          ARGS=$(echo "$CD_CONFIG_YAML" | yq e '.deployments.android.publish.playstore.args[]' | xargs)

          echo "PUBLISH_SCRIPT=$PUBLISH_SCRIPT" >> $GITHUB_OUTPUT
          echo "ARGS=$ARGS" >> $GITHUB_OUTPUT

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: ${{ vars.RUBY_VERSION }}
          bundler-cache: true
          working-directory: melos_workspace/${{ inputs.package-location }}/pkg_workspace/android

      - name: Download android build artifacts
        uses: actions/download-artifact@v4
        with:
          name: android-build-artifacts
          path: melos_workspace/${{ inputs.package-location }}/build_result/release/

      - name: Publish android app to Playstore
        working-directory: melos_workspace/${{ inputs.package-location }}
        env:
          PUBLISH_SCRIPT: ${{ steps.get_publish_config.outputs.PUBLISH_SCRIPT }}
          ARGS: ${{ steps.get_publish_config.outputs.ARGS }}
        run: |
          chmod +x $PUBLISH_SCRIPT
          $PUBLISH_SCRIPT $ARGS
