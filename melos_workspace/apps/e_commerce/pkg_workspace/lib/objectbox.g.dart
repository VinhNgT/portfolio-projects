// GENERATED CODE - DO NOT MODIFY BY HAND
// This code was generated by ObjectBox. To update it run the generator again
// with `dart run build_runner build`.
// See also https://docs.objectbox.io/getting-started#generate-objectbox-code

// ignore_for_file: camel_case_types, depend_on_referenced_packages
// coverage:ignore-file

import 'dart:typed_data';

import 'package:flat_buffers/flat_buffers.dart' as fb;
import 'package:objectbox/internal.dart'
    as obx_int; // generated code can access "internal" functionality
import 'package:objectbox/objectbox.dart' as obx;
import 'package:objectbox_flutter_libs/objectbox_flutter_libs.dart';

import 'features/cart/domain/cart.dart';
import 'features/cart/domain/cart_item.dart';
import 'features/orders/domain/order_item.dart';
import 'features/products/domain/product.dart';
import 'features/products/domain/product_variant.dart';
import 'features/products/domain/product_variant_group.dart';

export 'package:objectbox/objectbox.dart'; // so that callers only have to import this file

final _entities = <obx_int.ModelEntity>[
  obx_int.ModelEntity(
      id: const obx_int.IdUid(2, 307599695092690523),
      name: 'ProductObjBox',
      lastPropertyId: const obx_int.IdUid(28, 6488984898995719885),
      flags: 0,
      properties: <obx_int.ModelProperty>[
        obx_int.ModelProperty(
            id: const obx_int.IdUid(2, 9139216801920004625),
            name: 'id',
            type: 6,
            flags: 32808,
            indexId: const obx_int.IdUid(5, 8520788617113285444)),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(3, 324670971805847192),
            name: 'title',
            type: 9,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(4, 6145005961125491956),
            name: 'description',
            type: 9,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(5, 3059284140327782902),
            name: 'category',
            type: 9,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(6, 267637851333949486),
            name: 'price',
            type: 8,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(7, 4554979060498217641),
            name: 'discountPercentage',
            type: 8,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(8, 900756580292600094),
            name: 'rating',
            type: 8,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(9, 6183553046914097877),
            name: 'stock',
            type: 6,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(10, 4430284043763799561),
            name: 'tags',
            type: 30,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(11, 6641947026548145273),
            name: 'brand',
            type: 9,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(12, 7547268574896735599),
            name: 'sku',
            type: 9,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(13, 6429199711463273331),
            name: 'weight',
            type: 6,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(14, 4588334185540373634),
            name: 'warrantyInformation',
            type: 9,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(15, 2115845551089632906),
            name: 'shippingInformation',
            type: 9,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(16, 4365667788257627986),
            name: 'availabilityStatus',
            type: 9,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(17, 7140855121938964365),
            name: 'returnPolicy',
            type: 9,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(18, 4432593103971858308),
            name: 'minimumOrderQuantity',
            type: 6,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(19, 3078290827810401781),
            name: 'thumbnail',
            type: 9,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(20, 1362524607036554096),
            name: 'images',
            type: 30,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(24, 6639430907647758037),
            name: 'dimensions',
            type: 9,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(25, 3519034819990675235),
            name: 'reviews',
            type: 9,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(26, 5418490975707372171),
            name: 'meta',
            type: 9,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(27, 3059879191093972709),
            name: 'variantGroups',
            type: 9,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(28, 6488984898995719885),
            name: 'objectBoxId',
            type: 6,
            flags: 1)
      ],
      relations: <obx_int.ModelRelation>[],
      backlinks: <obx_int.ModelBacklink>[]),
  obx_int.ModelEntity(
      id: const obx_int.IdUid(5, 611993093371898658),
      name: 'ProductVariantObjBox',
      lastPropertyId: const obx_int.IdUid(8, 3463686786015728817),
      flags: 0,
      properties: <obx_int.ModelProperty>[
        obx_int.ModelProperty(
            id: const obx_int.IdUid(1, 2654442394818112228),
            name: 'objectBoxId',
            type: 6,
            flags: 1),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(5, 4849158286370506120),
            name: 'name',
            type: 9,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(8, 3463686786015728817),
            name: 'id',
            type: 9,
            flags: 34848,
            indexId: const obx_int.IdUid(3, 6970485909608024358))
      ],
      relations: <obx_int.ModelRelation>[],
      backlinks: <obx_int.ModelBacklink>[]),
  obx_int.ModelEntity(
      id: const obx_int.IdUid(6, 8225974737820970320),
      name: 'ProductVariantGroupObjBox',
      lastPropertyId: const obx_int.IdUid(4, 5784503013327032057),
      flags: 0,
      properties: <obx_int.ModelProperty>[
        obx_int.ModelProperty(
            id: const obx_int.IdUid(1, 3200454458227532346),
            name: 'objectBoxId',
            type: 6,
            flags: 1),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(2, 5733354912533510249),
            name: 'groupName',
            type: 9,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(4, 5784503013327032057),
            name: 'id',
            type: 9,
            flags: 34848,
            indexId: const obx_int.IdUid(4, 4731848096410667651))
      ],
      relations: <obx_int.ModelRelation>[
        obx_int.ModelRelation(
            id: const obx_int.IdUid(3, 5639597828711366762),
            name: 'variants',
            targetId: const obx_int.IdUid(5, 611993093371898658))
      ],
      backlinks: <obx_int.ModelBacklink>[]),
  obx_int.ModelEntity(
      id: const obx_int.IdUid(8, 5840494610102176032),
      name: 'OrderItemObjBox',
      lastPropertyId: const obx_int.IdUid(5, 618267511019184199),
      flags: 0,
      properties: <obx_int.ModelProperty>[
        obx_int.ModelProperty(
            id: const obx_int.IdUid(1, 2941815930816031895),
            name: 'objectBoxId',
            type: 6,
            flags: 1),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(2, 5827455060775265007),
            name: 'id',
            type: 9,
            flags: 34848,
            indexId: const obx_int.IdUid(13, 4636284548169686975)),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(3, 5533685602644418890),
            name: 'quantity',
            type: 6,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(4, 7096889038567414850),
            name: 'variantSelection',
            type: 9,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(5, 618267511019184199),
            name: 'productId',
            type: 11,
            flags: 520,
            indexId: const obx_int.IdUid(6, 7838233921635970695),
            relationTarget: 'ProductObjBox')
      ],
      relations: <obx_int.ModelRelation>[],
      backlinks: <obx_int.ModelBacklink>[]),
  obx_int.ModelEntity(
      id: const obx_int.IdUid(9, 14154236362366144),
      name: 'CartItemObjBox',
      lastPropertyId: const obx_int.IdUid(7, 8156503176015315141),
      flags: 0,
      properties: <obx_int.ModelProperty>[
        obx_int.ModelProperty(
            id: const obx_int.IdUid(1, 6665353237847002641),
            name: 'objectBoxId',
            type: 6,
            flags: 1),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(2, 7728546991389418495),
            name: 'id',
            type: 9,
            flags: 34848,
            indexId: const obx_int.IdUid(7, 1148474735375582837)),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(3, 8741391857048941382),
            name: 'isIncludeInOrder',
            type: 1,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(7, 8156503176015315141),
            name: 'orderItemId',
            type: 11,
            flags: 520,
            indexId: const obx_int.IdUid(12, 340509987493805022),
            relationTarget: 'OrderItemObjBox')
      ],
      relations: <obx_int.ModelRelation>[],
      backlinks: <obx_int.ModelBacklink>[]),
  obx_int.ModelEntity(
      id: const obx_int.IdUid(10, 8605994735222394823),
      name: 'CartObjBox',
      lastPropertyId: const obx_int.IdUid(2, 491045473202572228),
      flags: 0,
      properties: <obx_int.ModelProperty>[
        obx_int.ModelProperty(
            id: const obx_int.IdUid(1, 3108224276637993801),
            name: 'objectBoxId',
            type: 6,
            flags: 1),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(2, 491045473202572228),
            name: 'id',
            type: 9,
            flags: 34848,
            indexId: const obx_int.IdUid(8, 5216246883723796393))
      ],
      relations: <obx_int.ModelRelation>[
        obx_int.ModelRelation(
            id: const obx_int.IdUid(4, 9128852455977923740),
            name: 'cartItems',
            targetId: const obx_int.IdUid(9, 14154236362366144))
      ],
      backlinks: <obx_int.ModelBacklink>[])
];

/// Shortcut for [obx.Store.new] that passes [getObjectBoxModel] and for Flutter
/// apps by default a [directory] using `defaultStoreDirectory()` from the
/// ObjectBox Flutter library.
///
/// Note: for desktop apps it is recommended to specify a unique [directory].
///
/// See [obx.Store.new] for an explanation of all parameters.
///
/// For Flutter apps, also calls `loadObjectBoxLibraryAndroidCompat()` from
/// the ObjectBox Flutter library to fix loading the native ObjectBox library
/// on Android 6 and older.
Future<obx.Store> openStore(
    {String? directory,
    int? maxDBSizeInKB,
    int? maxDataSizeInKB,
    int? fileMode,
    int? maxReaders,
    bool queriesCaseSensitiveDefault = true,
    String? macosApplicationGroup}) async {
  await loadObjectBoxLibraryAndroidCompat();
  return obx.Store(getObjectBoxModel(),
      directory: directory ?? (await defaultStoreDirectory()).path,
      maxDBSizeInKB: maxDBSizeInKB,
      maxDataSizeInKB: maxDataSizeInKB,
      fileMode: fileMode,
      maxReaders: maxReaders,
      queriesCaseSensitiveDefault: queriesCaseSensitiveDefault,
      macosApplicationGroup: macosApplicationGroup);
}

/// Returns the ObjectBox model definition for this project for use with
/// [obx.Store.new].
obx_int.ModelDefinition getObjectBoxModel() {
  final model = obx_int.ModelInfo(
      entities: _entities,
      lastEntityId: const obx_int.IdUid(10, 8605994735222394823),
      lastIndexId: const obx_int.IdUid(13, 4636284548169686975),
      lastRelationId: const obx_int.IdUid(4, 9128852455977923740),
      lastSequenceId: const obx_int.IdUid(0, 0),
      retiredEntityUids: const [
        5946370142095738937,
        7076107657357520604,
        1916443049460811648,
        7058528773466988324
      ],
      retiredIndexUids: const [
        5701902224062802699,
        2363870569601332828,
        4514626722685013392,
        1659581694241526232,
        8043607296599062530
      ],
      retiredPropertyUids: const [
        1689896491570404051,
        2059984022382436827,
        1420730593991293420,
        2588842620869909792,
        7514017987926101756,
        3839828561667838280,
        1897006035731359749,
        8952275519357991707,
        611519998964359718,
        1779653045621078340,
        2604426192469264692,
        2823356497939968621,
        3224297662143891840,
        6899803338744920278,
        1083447665443876985,
        2505423342172761225,
        1481159043260468089,
        7788696316004716768,
        872929442173590343,
        578572303829674352,
        8426393547835818922,
        5539908179244788395,
        815787842333547449,
        1317583848092973378,
        388236624065737748,
        1152807160995462487,
        1164582686487277422
      ],
      retiredRelationUids: const [6094538815633681575, 2693141868685199529],
      modelVersion: 5,
      modelVersionParserMinimum: 5,
      version: 1);

  final bindings = <Type, obx_int.EntityDefinition>{
    ProductObjBox: obx_int.EntityDefinition<ProductObjBox>(
        model: _entities[0],
        toOneRelations: (ProductObjBox object) => [],
        toManyRelations: (ProductObjBox object) => {},
        getId: (ProductObjBox object) => object.objectBoxId,
        setId: (ProductObjBox object, int id) {
          object.objectBoxId = id;
        },
        objectToFB: (ProductObjBox object, fb.Builder fbb) {
          final titleOffset = fbb.writeString(object.title);
          final descriptionOffset = fbb.writeString(object.description);
          final categoryOffset = fbb.writeString(object.category);
          final tagsOffset = fbb.writeList(
              object.tags.map(fbb.writeString).toList(growable: false));
          final brandOffset =
              object.brand == null ? null : fbb.writeString(object.brand!);
          final skuOffset = fbb.writeString(object.sku);
          final warrantyInformationOffset =
              fbb.writeString(object.warrantyInformation);
          final shippingInformationOffset =
              fbb.writeString(object.shippingInformation);
          final availabilityStatusOffset =
              fbb.writeString(object.availabilityStatus);
          final returnPolicyOffset = fbb.writeString(object.returnPolicy);
          final thumbnailOffset = fbb.writeString(object.thumbnail);
          final imagesOffset = fbb.writeList(
              object.images.map(fbb.writeString).toList(growable: false));
          final dimensionsOffset = fbb.writeString(object.dimensions);
          final reviewsOffset = fbb.writeString(object.reviews);
          final metaOffset = fbb.writeString(object.meta);
          final variantGroupsOffset = fbb.writeString(object.variantGroups);
          fbb.startTable(29);
          fbb.addInt64(1, object.id);
          fbb.addOffset(2, titleOffset);
          fbb.addOffset(3, descriptionOffset);
          fbb.addOffset(4, categoryOffset);
          fbb.addFloat64(5, object.price);
          fbb.addFloat64(6, object.discountPercentage);
          fbb.addFloat64(7, object.rating);
          fbb.addInt64(8, object.stock);
          fbb.addOffset(9, tagsOffset);
          fbb.addOffset(10, brandOffset);
          fbb.addOffset(11, skuOffset);
          fbb.addInt64(12, object.weight);
          fbb.addOffset(13, warrantyInformationOffset);
          fbb.addOffset(14, shippingInformationOffset);
          fbb.addOffset(15, availabilityStatusOffset);
          fbb.addOffset(16, returnPolicyOffset);
          fbb.addInt64(17, object.minimumOrderQuantity);
          fbb.addOffset(18, thumbnailOffset);
          fbb.addOffset(19, imagesOffset);
          fbb.addOffset(23, dimensionsOffset);
          fbb.addOffset(24, reviewsOffset);
          fbb.addOffset(25, metaOffset);
          fbb.addOffset(26, variantGroupsOffset);
          fbb.addInt64(27, object.objectBoxId);
          fbb.finish(fbb.endTable());
          return object.objectBoxId;
        },
        objectFromFB: (obx.Store store, ByteData fbData) {
          final buffer = fb.BufferContext(fbData);
          final rootOffset = buffer.derefObject(0);
          final idParam =
              const fb.Int64Reader().vTableGet(buffer, rootOffset, 6, 0);
          final titleParam = const fb.StringReader(asciiOptimization: true)
              .vTableGet(buffer, rootOffset, 8, '');
          final descriptionParam =
              const fb.StringReader(asciiOptimization: true)
                  .vTableGet(buffer, rootOffset, 10, '');
          final categoryParam = const fb.StringReader(asciiOptimization: true)
              .vTableGet(buffer, rootOffset, 12, '');
          final priceParam =
              const fb.Float64Reader().vTableGet(buffer, rootOffset, 14, 0);
          final discountPercentageParam =
              const fb.Float64Reader().vTableGet(buffer, rootOffset, 16, 0);
          final ratingParam =
              const fb.Float64Reader().vTableGet(buffer, rootOffset, 18, 0);
          final stockParam =
              const fb.Int64Reader().vTableGet(buffer, rootOffset, 20, 0);
          final tagsParam = const fb.ListReader<String>(
                  fb.StringReader(asciiOptimization: true),
                  lazy: false)
              .vTableGet(buffer, rootOffset, 22, []);
          final brandParam = const fb.StringReader(asciiOptimization: true)
              .vTableGetNullable(buffer, rootOffset, 24);
          final skuParam = const fb.StringReader(asciiOptimization: true)
              .vTableGet(buffer, rootOffset, 26, '');
          final weightParam =
              const fb.Int64Reader().vTableGet(buffer, rootOffset, 28, 0);
          final dimensionsParam = const fb.StringReader(asciiOptimization: true)
              .vTableGet(buffer, rootOffset, 50, '');
          final warrantyInformationParam =
              const fb.StringReader(asciiOptimization: true)
                  .vTableGet(buffer, rootOffset, 30, '');
          final shippingInformationParam =
              const fb.StringReader(asciiOptimization: true)
                  .vTableGet(buffer, rootOffset, 32, '');
          final availabilityStatusParam =
              const fb.StringReader(asciiOptimization: true)
                  .vTableGet(buffer, rootOffset, 34, '');
          final reviewsParam = const fb.StringReader(asciiOptimization: true)
              .vTableGet(buffer, rootOffset, 52, '');
          final returnPolicyParam =
              const fb.StringReader(asciiOptimization: true)
                  .vTableGet(buffer, rootOffset, 36, '');
          final minimumOrderQuantityParam =
              const fb.Int64Reader().vTableGet(buffer, rootOffset, 38, 0);
          final metaParam = const fb.StringReader(asciiOptimization: true)
              .vTableGet(buffer, rootOffset, 54, '');
          final thumbnailParam = const fb.StringReader(asciiOptimization: true)
              .vTableGet(buffer, rootOffset, 40, '');
          final imagesParam = const fb.ListReader<String>(
                  fb.StringReader(asciiOptimization: true),
                  lazy: false)
              .vTableGet(buffer, rootOffset, 42, []);
          final variantGroupsParam =
              const fb.StringReader(asciiOptimization: true)
                  .vTableGet(buffer, rootOffset, 56, '');
          final object = ProductObjBox(
              id: idParam,
              title: titleParam,
              description: descriptionParam,
              category: categoryParam,
              price: priceParam,
              discountPercentage: discountPercentageParam,
              rating: ratingParam,
              stock: stockParam,
              tags: tagsParam,
              brand: brandParam,
              sku: skuParam,
              weight: weightParam,
              dimensions: dimensionsParam,
              warrantyInformation: warrantyInformationParam,
              shippingInformation: shippingInformationParam,
              availabilityStatus: availabilityStatusParam,
              reviews: reviewsParam,
              returnPolicy: returnPolicyParam,
              minimumOrderQuantity: minimumOrderQuantityParam,
              meta: metaParam,
              thumbnail: thumbnailParam,
              images: imagesParam,
              variantGroups: variantGroupsParam)
            ..objectBoxId =
                const fb.Int64Reader().vTableGet(buffer, rootOffset, 58, 0);

          return object;
        }),
    ProductVariantObjBox: obx_int.EntityDefinition<ProductVariantObjBox>(
        model: _entities[1],
        toOneRelations: (ProductVariantObjBox object) => [],
        toManyRelations: (ProductVariantObjBox object) => {},
        getId: (ProductVariantObjBox object) => object.objectBoxId,
        setId: (ProductVariantObjBox object, int id) {
          object.objectBoxId = id;
        },
        objectToFB: (ProductVariantObjBox object, fb.Builder fbb) {
          final nameOffset = fbb.writeString(object.name);
          final idOffset = fbb.writeString(object.id);
          fbb.startTable(9);
          fbb.addInt64(0, object.objectBoxId);
          fbb.addOffset(4, nameOffset);
          fbb.addOffset(7, idOffset);
          fbb.finish(fbb.endTable());
          return object.objectBoxId;
        },
        objectFromFB: (obx.Store store, ByteData fbData) {
          final buffer = fb.BufferContext(fbData);
          final rootOffset = buffer.derefObject(0);
          final idParam = const fb.StringReader(asciiOptimization: true)
              .vTableGet(buffer, rootOffset, 18, '');
          final nameParam = const fb.StringReader(asciiOptimization: true)
              .vTableGet(buffer, rootOffset, 12, '');
          final object = ProductVariantObjBox(id: idParam, name: nameParam)
            ..objectBoxId =
                const fb.Int64Reader().vTableGet(buffer, rootOffset, 4, 0);

          return object;
        }),
    ProductVariantGroupObjBox: obx_int.EntityDefinition<
            ProductVariantGroupObjBox>(
        model: _entities[2],
        toOneRelations: (ProductVariantGroupObjBox object) => [],
        toManyRelations: (ProductVariantGroupObjBox object) => {
              obx_int.RelInfo<ProductVariantGroupObjBox>.toMany(
                  3, object.objectBoxId): object.variants
            },
        getId: (ProductVariantGroupObjBox object) => object.objectBoxId,
        setId: (ProductVariantGroupObjBox object, int id) {
          object.objectBoxId = id;
        },
        objectToFB: (ProductVariantGroupObjBox object, fb.Builder fbb) {
          final groupNameOffset = fbb.writeString(object.groupName);
          final idOffset = fbb.writeString(object.id);
          fbb.startTable(5);
          fbb.addInt64(0, object.objectBoxId);
          fbb.addOffset(1, groupNameOffset);
          fbb.addOffset(3, idOffset);
          fbb.finish(fbb.endTable());
          return object.objectBoxId;
        },
        objectFromFB: (obx.Store store, ByteData fbData) {
          final buffer = fb.BufferContext(fbData);
          final rootOffset = buffer.derefObject(0);
          final idParam = const fb.StringReader(asciiOptimization: true)
              .vTableGet(buffer, rootOffset, 10, '');
          final groupNameParam = const fb.StringReader(asciiOptimization: true)
              .vTableGet(buffer, rootOffset, 6, '');
          final variantsParam = obx.ToMany<ProductVariantObjBox>();
          final object = ProductVariantGroupObjBox(
              id: idParam, groupName: groupNameParam, variants: variantsParam)
            ..objectBoxId =
                const fb.Int64Reader().vTableGet(buffer, rootOffset, 4, 0);
          obx_int.InternalToManyAccess.setRelInfo<ProductVariantGroupObjBox>(
              object.variants,
              store,
              obx_int.RelInfo<ProductVariantGroupObjBox>.toMany(
                  3, object.objectBoxId));
          return object;
        }),
    OrderItemObjBox: obx_int.EntityDefinition<OrderItemObjBox>(
        model: _entities[3],
        toOneRelations: (OrderItemObjBox object) => [object.product],
        toManyRelations: (OrderItemObjBox object) => {},
        getId: (OrderItemObjBox object) => object.objectBoxId,
        setId: (OrderItemObjBox object, int id) {
          object.objectBoxId = id;
        },
        objectToFB: (OrderItemObjBox object, fb.Builder fbb) {
          final idOffset = fbb.writeString(object.id);
          final variantSelectionOffset =
              fbb.writeString(object.variantSelection);
          fbb.startTable(6);
          fbb.addInt64(0, object.objectBoxId);
          fbb.addOffset(1, idOffset);
          fbb.addInt64(2, object.quantity);
          fbb.addOffset(3, variantSelectionOffset);
          fbb.addInt64(4, object.product.targetId);
          fbb.finish(fbb.endTable());
          return object.objectBoxId;
        },
        objectFromFB: (obx.Store store, ByteData fbData) {
          final buffer = fb.BufferContext(fbData);
          final rootOffset = buffer.derefObject(0);
          final idParam = const fb.StringReader(asciiOptimization: true)
              .vTableGet(buffer, rootOffset, 6, '');
          final productParam = obx.ToOne<ProductObjBox>(
              targetId:
                  const fb.Int64Reader().vTableGet(buffer, rootOffset, 12, 0));
          final quantityParam =
              const fb.Int64Reader().vTableGet(buffer, rootOffset, 8, 0);
          final variantSelectionParam =
              const fb.StringReader(asciiOptimization: true)
                  .vTableGet(buffer, rootOffset, 10, '');
          final object = OrderItemObjBox(
              id: idParam,
              product: productParam,
              quantity: quantityParam,
              variantSelection: variantSelectionParam)
            ..objectBoxId =
                const fb.Int64Reader().vTableGet(buffer, rootOffset, 4, 0);
          object.product.attach(store);
          return object;
        }),
    CartItemObjBox: obx_int.EntityDefinition<CartItemObjBox>(
        model: _entities[4],
        toOneRelations: (CartItemObjBox object) => [object.orderItem],
        toManyRelations: (CartItemObjBox object) => {},
        getId: (CartItemObjBox object) => object.objectBoxId,
        setId: (CartItemObjBox object, int id) {
          object.objectBoxId = id;
        },
        objectToFB: (CartItemObjBox object, fb.Builder fbb) {
          final idOffset = fbb.writeString(object.id);
          fbb.startTable(8);
          fbb.addInt64(0, object.objectBoxId);
          fbb.addOffset(1, idOffset);
          fbb.addBool(2, object.isIncludeInOrder);
          fbb.addInt64(6, object.orderItem.targetId);
          fbb.finish(fbb.endTable());
          return object.objectBoxId;
        },
        objectFromFB: (obx.Store store, ByteData fbData) {
          final buffer = fb.BufferContext(fbData);
          final rootOffset = buffer.derefObject(0);
          final idParam = const fb.StringReader(asciiOptimization: true)
              .vTableGet(buffer, rootOffset, 6, '');
          final orderItemParam = obx.ToOne<OrderItemObjBox>(
              targetId:
                  const fb.Int64Reader().vTableGet(buffer, rootOffset, 16, 0));
          final isIncludeInOrderParam =
              const fb.BoolReader().vTableGet(buffer, rootOffset, 8, false);
          final object = CartItemObjBox(
              id: idParam,
              orderItem: orderItemParam,
              isIncludeInOrder: isIncludeInOrderParam)
            ..objectBoxId =
                const fb.Int64Reader().vTableGet(buffer, rootOffset, 4, 0);
          object.orderItem.attach(store);
          return object;
        }),
    CartObjBox: obx_int.EntityDefinition<CartObjBox>(
        model: _entities[5],
        toOneRelations: (CartObjBox object) => [],
        toManyRelations: (CartObjBox object) => {
              obx_int.RelInfo<CartObjBox>.toMany(4, object.objectBoxId):
                  object.cartItems
            },
        getId: (CartObjBox object) => object.objectBoxId,
        setId: (CartObjBox object, int id) {
          object.objectBoxId = id;
        },
        objectToFB: (CartObjBox object, fb.Builder fbb) {
          final idOffset = fbb.writeString(object.id);
          fbb.startTable(3);
          fbb.addInt64(0, object.objectBoxId);
          fbb.addOffset(1, idOffset);
          fbb.finish(fbb.endTable());
          return object.objectBoxId;
        },
        objectFromFB: (obx.Store store, ByteData fbData) {
          final buffer = fb.BufferContext(fbData);
          final rootOffset = buffer.derefObject(0);
          final idParam = const fb.StringReader(asciiOptimization: true)
              .vTableGet(buffer, rootOffset, 6, '');
          final cartItemsParam = obx.ToMany<CartItemObjBox>();
          final object = CartObjBox(id: idParam, cartItems: cartItemsParam)
            ..objectBoxId =
                const fb.Int64Reader().vTableGet(buffer, rootOffset, 4, 0);
          obx_int.InternalToManyAccess.setRelInfo<CartObjBox>(object.cartItems,
              store, obx_int.RelInfo<CartObjBox>.toMany(4, object.objectBoxId));
          return object;
        })
  };

  return obx_int.ModelDefinition(model, bindings);
}

/// [ProductObjBox] entity fields to define ObjectBox queries.
class ProductObjBox_ {
  /// See [ProductObjBox.id].
  static final id =
      obx.QueryIntegerProperty<ProductObjBox>(_entities[0].properties[0]);

  /// See [ProductObjBox.title].
  static final title =
      obx.QueryStringProperty<ProductObjBox>(_entities[0].properties[1]);

  /// See [ProductObjBox.description].
  static final description =
      obx.QueryStringProperty<ProductObjBox>(_entities[0].properties[2]);

  /// See [ProductObjBox.category].
  static final category =
      obx.QueryStringProperty<ProductObjBox>(_entities[0].properties[3]);

  /// See [ProductObjBox.price].
  static final price =
      obx.QueryDoubleProperty<ProductObjBox>(_entities[0].properties[4]);

  /// See [ProductObjBox.discountPercentage].
  static final discountPercentage =
      obx.QueryDoubleProperty<ProductObjBox>(_entities[0].properties[5]);

  /// See [ProductObjBox.rating].
  static final rating =
      obx.QueryDoubleProperty<ProductObjBox>(_entities[0].properties[6]);

  /// See [ProductObjBox.stock].
  static final stock =
      obx.QueryIntegerProperty<ProductObjBox>(_entities[0].properties[7]);

  /// See [ProductObjBox.tags].
  static final tags =
      obx.QueryStringVectorProperty<ProductObjBox>(_entities[0].properties[8]);

  /// See [ProductObjBox.brand].
  static final brand =
      obx.QueryStringProperty<ProductObjBox>(_entities[0].properties[9]);

  /// See [ProductObjBox.sku].
  static final sku =
      obx.QueryStringProperty<ProductObjBox>(_entities[0].properties[10]);

  /// See [ProductObjBox.weight].
  static final weight =
      obx.QueryIntegerProperty<ProductObjBox>(_entities[0].properties[11]);

  /// See [ProductObjBox.warrantyInformation].
  static final warrantyInformation =
      obx.QueryStringProperty<ProductObjBox>(_entities[0].properties[12]);

  /// See [ProductObjBox.shippingInformation].
  static final shippingInformation =
      obx.QueryStringProperty<ProductObjBox>(_entities[0].properties[13]);

  /// See [ProductObjBox.availabilityStatus].
  static final availabilityStatus =
      obx.QueryStringProperty<ProductObjBox>(_entities[0].properties[14]);

  /// See [ProductObjBox.returnPolicy].
  static final returnPolicy =
      obx.QueryStringProperty<ProductObjBox>(_entities[0].properties[15]);

  /// See [ProductObjBox.minimumOrderQuantity].
  static final minimumOrderQuantity =
      obx.QueryIntegerProperty<ProductObjBox>(_entities[0].properties[16]);

  /// See [ProductObjBox.thumbnail].
  static final thumbnail =
      obx.QueryStringProperty<ProductObjBox>(_entities[0].properties[17]);

  /// See [ProductObjBox.images].
  static final images =
      obx.QueryStringVectorProperty<ProductObjBox>(_entities[0].properties[18]);

  /// See [ProductObjBox.dimensions].
  static final dimensions =
      obx.QueryStringProperty<ProductObjBox>(_entities[0].properties[19]);

  /// See [ProductObjBox.reviews].
  static final reviews =
      obx.QueryStringProperty<ProductObjBox>(_entities[0].properties[20]);

  /// See [ProductObjBox.meta].
  static final meta =
      obx.QueryStringProperty<ProductObjBox>(_entities[0].properties[21]);

  /// See [ProductObjBox.variantGroups].
  static final variantGroups =
      obx.QueryStringProperty<ProductObjBox>(_entities[0].properties[22]);

  /// See [ProductObjBox.objectBoxId].
  static final objectBoxId =
      obx.QueryIntegerProperty<ProductObjBox>(_entities[0].properties[23]);
}

/// [ProductVariantObjBox] entity fields to define ObjectBox queries.
class ProductVariantObjBox_ {
  /// See [ProductVariantObjBox.objectBoxId].
  static final objectBoxId = obx.QueryIntegerProperty<ProductVariantObjBox>(
      _entities[1].properties[0]);

  /// See [ProductVariantObjBox.name].
  static final name =
      obx.QueryStringProperty<ProductVariantObjBox>(_entities[1].properties[1]);

  /// See [ProductVariantObjBox.id].
  static final id =
      obx.QueryStringProperty<ProductVariantObjBox>(_entities[1].properties[2]);
}

/// [ProductVariantGroupObjBox] entity fields to define ObjectBox queries.
class ProductVariantGroupObjBox_ {
  /// See [ProductVariantGroupObjBox.objectBoxId].
  static final objectBoxId =
      obx.QueryIntegerProperty<ProductVariantGroupObjBox>(
          _entities[2].properties[0]);

  /// See [ProductVariantGroupObjBox.groupName].
  static final groupName = obx.QueryStringProperty<ProductVariantGroupObjBox>(
      _entities[2].properties[1]);

  /// See [ProductVariantGroupObjBox.id].
  static final id = obx.QueryStringProperty<ProductVariantGroupObjBox>(
      _entities[2].properties[2]);

  /// see [ProductVariantGroupObjBox.variants]
  static final variants =
      obx.QueryRelationToMany<ProductVariantGroupObjBox, ProductVariantObjBox>(
          _entities[2].relations[0]);
}

/// [OrderItemObjBox] entity fields to define ObjectBox queries.
class OrderItemObjBox_ {
  /// See [OrderItemObjBox.objectBoxId].
  static final objectBoxId =
      obx.QueryIntegerProperty<OrderItemObjBox>(_entities[3].properties[0]);

  /// See [OrderItemObjBox.id].
  static final id =
      obx.QueryStringProperty<OrderItemObjBox>(_entities[3].properties[1]);

  /// See [OrderItemObjBox.quantity].
  static final quantity =
      obx.QueryIntegerProperty<OrderItemObjBox>(_entities[3].properties[2]);

  /// See [OrderItemObjBox.variantSelection].
  static final variantSelection =
      obx.QueryStringProperty<OrderItemObjBox>(_entities[3].properties[3]);

  /// See [OrderItemObjBox.product].
  static final product = obx.QueryRelationToOne<OrderItemObjBox, ProductObjBox>(
      _entities[3].properties[4]);
}

/// [CartItemObjBox] entity fields to define ObjectBox queries.
class CartItemObjBox_ {
  /// See [CartItemObjBox.objectBoxId].
  static final objectBoxId =
      obx.QueryIntegerProperty<CartItemObjBox>(_entities[4].properties[0]);

  /// See [CartItemObjBox.id].
  static final id =
      obx.QueryStringProperty<CartItemObjBox>(_entities[4].properties[1]);

  /// See [CartItemObjBox.isIncludeInOrder].
  static final isIncludeInOrder =
      obx.QueryBooleanProperty<CartItemObjBox>(_entities[4].properties[2]);

  /// See [CartItemObjBox.orderItem].
  static final orderItem =
      obx.QueryRelationToOne<CartItemObjBox, OrderItemObjBox>(
          _entities[4].properties[3]);
}

/// [CartObjBox] entity fields to define ObjectBox queries.
class CartObjBox_ {
  /// See [CartObjBox.objectBoxId].
  static final objectBoxId =
      obx.QueryIntegerProperty<CartObjBox>(_entities[5].properties[0]);

  /// See [CartObjBox.id].
  static final id =
      obx.QueryStringProperty<CartObjBox>(_entities[5].properties[1]);

  /// see [CartObjBox.cartItems]
  static final cartItems = obx.QueryRelationToMany<CartObjBox, CartItemObjBox>(
      _entities[5].relations[0]);
}
